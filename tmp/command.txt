import os, logging, clips

from io import StringIO
log_stream = StringIO()

log_format = '%(message)s'
logging.basicConfig(stream=log_stream, level=logging.INFO, format=log_format)

env = clips.Environment()

router = clips.LoggingRouter()
env.add_router(router)

env.load('/home/roboworks/clips_ws/clp/cubes_stacks.clp')
env.reset()

log_stream.truncate(0)
log_stream.seek(0)
env.run()

_log = log_stream.getvalue().splitlines()
for i in range(len(_log)):
    _log[i] = _log[i].rstrip('. ')

print(_log)




_file = '/home/roboworks/clips_ws/clp/batch/ROS_cubes.dat'
_path = os.path.dirname(os.path.abspath(_file))


_f = open(_file, 'r')
_line = _f.readline()

env.batch_star((_path + os.sep + _line).strip())




def_globals = """
(defglobal
   ?*defaultTimeout* = defaultTimeout
   ?*defaultAttempts* = defaultAttempts)
"""
env.build(def_globals)


for fact in env.facts():
    print("<Fact-",fact.index,"> ", fact)

for rule in env.rules():
    print(rule)

for activation in env.activations():
    print(activation)

for template in env.templates():
    print(template)


for _router in env.routers():
    print(_router.name)

for _g in env.globals():
    print(_g)


fact = template.assert_fact(name='Leeroy',
                            surname='Jenkins',
                            birthdate=clips.Symbol('11/05/2005'))

display = True
plan_steps = []
while True:
    _run = env.run(1)
    
    if (_run > 0):
        fact = None
        for _fact in env.facts():
            if (display):
                print("<Fact-",_fact.index,"> ", _fact)
               
        for activation in env.activations():
            if (display):
                print("\n\n<Activation>", activation)
        
        if (str(_fact).find("goal") != -1):
            plan_steps.append(str(_fact))
        
        print("\n==============================\n==============================\n")
    else:
        break

print(plan_steps)

fact = None
for _fact in env.facts():
    fact = _fact
